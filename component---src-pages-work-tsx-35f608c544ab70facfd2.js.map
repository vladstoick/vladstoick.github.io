{"version":3,"sources":["webpack:///./src/components/work/work_experience_list/index.tsx","webpack:///./src/pages/work.tsx","webpack:///./src/components/common/StyledText.tsx","webpack:///./src/components/common/Grid.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/common/Blockquote.tsx","webpack:///./src/components/work/work_title/index.tsx","webpack:///./src/utils/markdown.tsx","webpack:///./src/components/work/work_experience/index.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header/avatar/index.tsx","webpack:///./src/components/header/navigation/index.tsx","webpack:///./src/components/common/PageLayout.tsx"],"names":["List","styled","div","withConfig","displayName","componentId","WorkExperienceList","props","react","StyledText","type","workExperience","map","we","i","work_experience","Object","assign","key","WorkPage","data","allMarkdownRemark","edges","x","node","PageLayout","work_experience_list","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","styled_components__WEBPACK_IMPORTED_MODULE_1__","className","children","fontWeight","calculateFontWeight","fontStyle","color","d","__webpack_exports__","Container","Row","CentredRow","styled_components__WEBPACK_IMPORTED_MODULE_0__","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","createElement","Consumer","staticQueryData","query","render","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Blurb","blockquote","HeadlineRow","WorkTitle","title","location","period","renderAst","rehypeReact","component","work_title","Compiler","TagList","Tag","_utils_markdown__WEBPACK_IMPORTED_MODULE_2__","_common_StyledText__WEBPACK_IMPORTED_MODULE_3__","WorkExperience","htmlAst","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","AvatarContainer","AvatarImage","img","Avatar","src","imageUrl","name","NavigationContainer","ul","NavigationLinkContainer","li","StyledLink","Link","attrs","activeClassName","NavigationLink","to","path","Navigation","Grid","links","link","navigation_NavigationLink","GlobalStyle","createGlobalStyle","_templateObject","gatsby_browser_entry","Helmet_default","site","siteMetadata","avatar","navigation","_1024071770"],"mappings":"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","file":"component---src-pages-work-tsx-35f608c544ab70facfd2.js","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { IWorkExperienceMarkdown } from \"../../../pages/work\";\nimport StyledText from \"../../common/StyledText\";\nimport WorkExperience from \"../work_experience\";\n\nconst List = styled.div`\n  & > div:not(:first-child) {\n    border-top: 1px solid hsla(0, 0%, 0%, 0.2);\n  }\n`;\n\ninterface IWorkExperienceProps {\n  workExperience: IWorkExperienceMarkdown[];\n}\n\nconst WorkExperienceList = (props: IWorkExperienceProps) => (\n  <div>\n    <StyledText type=\"h2\">ðŸ’¼ Work Experience</StyledText>\n    <List>\n      {props.workExperience.map((we, i) => (\n        <WorkExperience {...we} key={i} />\n      ))}\n    </List>\n  </div>\n);\n\nexport default WorkExperienceList;\n","import { graphql } from \"gatsby\";\nimport * as React from \"react\";\nimport PageLayout from \"../components/common/PageLayout\";\nimport WorkExperienceList from \"../components/work/work_experience_list\";\n\nexport interface IWorkExperienceMarkdown {\n  htmlAst: string;\n}\n\ninterface IWorkPageProps {\n  data: {\n    allMarkdownRemark: {\n      edges: [\n        {\n          node: IWorkExperienceMarkdown;\n        }\n      ];\n    };\n  };\n}\n\nconst WorkPage = (props: IWorkPageProps) => {\n  const data = props.data.allMarkdownRemark.edges.map(x => x.node);\n\n  return (\n    <PageLayout>\n      <WorkExperienceList workExperience={data} />\n    </PageLayout>\n  );\n};\n\nexport default WorkPage;\n\nexport const pageQuery = graphql`\n  query WorkPage {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/.*work.*/\" } }\n      sort: { order: ASC, fields: [frontmatter___order] }\n    ) {\n      edges {\n        node {\n          htmlAst\n        }\n      }\n    }\n  }\n`;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\ntype Headers = \"h1\" | \"h2\" | \"h3\";\ntype OtherTypes = \"p\" | \"span\";\ntype TextType = Headers | OtherTypes;\n\ninterface ITextProps {\n  children: React.ReactChild | React.ReactChild[];\n  type: TextType;\n  fontWeight?: \"normal\" | \"bold\";\n  fontStyle?: \"italic\";\n  color?: string;\n  className?: string;\n}\n\nconst Text = (props: ITextProps) => {\n  if (props.type === \"h1\") {\n    return <h1 className={props.className}>{props.children}</h1>;\n  } else if (props.type === \"h2\") {\n    return <h2 className={props.className}>{props.children}</h2>;\n  } else if (props.type === \"h3\") {\n    return <h3 className={props.className}>{props.children}</h3>;\n  } else if (props.type === \"p\") {\n    return <p className={props.className}>{props.children}</p>;\n  } else if (props.type === \"span\") {\n    return <span className={props.className}>{props.children}</span>;\n  }\n};\n\nfunction calculateFontWeight(props: ITextProps) {\n  if (props.fontWeight === \"bold\") {\n    return 700;\n  } else if (\n    props.type === \"h1\" ||\n    props.type === \"h2\" ||\n    props.type === \"h3\"\n  ) {\n    return 200;\n  } else {\n    return 400;\n  }\n}\n\nconst StyledText = styled<ITextProps>(Text)`\n  font-weight: ${props => calculateFontWeight(props)};\n  font-style: ${props =>\n    props.fontStyle !== null ? props.fontStyle : \"normal\"};\n  color: ${props =>\n    props.color !== null ? props.color : \"hsla(0, 0 %, 0 %, 0.7)\"};\n`;\n\nexport default StyledText;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (max-width: 900px) {\n    padding: 10px;\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n`;\n\nexport const CentredRow = styled(Row)`\n  justify-items: center;\n  width: 100%;\n`;\n\nexport const Column = styled(Row)`\n  display: flex;\n  flex-direction: column;\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import styled from \"styled-components\";\n\nexport const Blurb = styled.blockquote`\n  margin: 0em 0em 1em 0em;\n  padding: 0 0.5em;\n  color: hsla(0, 0%, 0%, 0.6);\n  border-left: 0.39rem solid hsla(0, 0%, 0%, 0.13);\n  font-size: 1em;\n  p {\n    margin-bottom: 0.5em;\n  }\n\n  li {\n    margin-bottom: 0px;\n  }\n`;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Row } from \"../../common/Grid\";\nimport StyledText from \"../../common/StyledText\";\n\ninterface IWorkEducationHeadlineProps {\n  title: string;\n  location: string;\n  period: string;\n}\n\nconst HeadlineRow = styled(Row)`\n  justify-content: space-between;\n  flex-wrap: wrap;\n  align-items: center;\n  @media (max-width: 900px) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const WorkTitle = (props: IWorkEducationHeadlineProps) => (\n  <HeadlineRow>\n    <StyledText type=\"p\">\n      <StyledText type=\"span\" fontWeight=\"bold\">\n        {props.title}\n      </StyledText>{\" \"}\n      at <StyledText type=\"span\">{props.location}</StyledText>\n    </StyledText>\n    <StyledText type=\"span\" color=\"gray\">\n      {props.period}\n    </StyledText>\n  </HeadlineRow>\n);\n\nexport default WorkTitle;\n","import * as React from \"react\";\nimport rehypeReact from \"rehype-react\";\nimport { Blurb } from \"../components/common/Blockquote\";\nimport StyledText from \"../components/common/StyledText\";\nimport { Tag, TagList } from \"../components/work/work_experience\";\nimport WorkTitle from \"../components/work/work_title\";\n\nexport const createElement = (\n  component: string,\n  props: any = {},\n  children: React.ReactChild[] = []\n) => {\n  if (\n    component === \"h1\" ||\n    component === \"h2\" ||\n    component === \"h3\" ||\n    component === \"p\"\n  ) {\n    return (\n      <StyledText type={component} key={props.key}>\n        {children}\n      </StyledText>\n    );\n  } else if (component === \"strong\") {\n    return (\n      <StyledText type=\"span\" fontWeight=\"bold\" key={props.key}>\n        {children}\n      </StyledText>\n    );\n  } else if (component === \"em\") {\n    return (\n      <StyledText type=\"span\" fontStyle=\"italic\" key={props.key}>\n        {children}\n      </StyledText>\n    );\n  } else if (component === \"taglist\") {\n    return <TagList key={props.key}>{children}</TagList>;\n  } else if (component === \"tag\") {\n    return (\n      <Tag key={props.key} type=\"span\">\n        {children}\n      </Tag>\n    );\n  } else if (component === \"blockquote\") {\n    return <Blurb key={props.key}>{children}</Blurb>;\n  } else if (component === \"worktitle\") {\n    return <WorkTitle {...props} />;\n  } else if (\n    component === \"div\" ||\n    component === \"a\" ||\n    component === \"ul\" ||\n    component === \"li\"\n  ) {\n    return React.createElement(component, props, children);\n  } else {\n    return (\n      <div key={props.key}>\n        NOT ABLE TO HANDLE {component} with props {props}\n      </div>\n    );\n  }\n};\n\nexport const renderAst = new rehypeReact({ createElement }).Compiler;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { IWorkExperienceMarkdown } from \"../../../pages/work\";\nimport { renderAst } from \"../../../utils/markdown\";\nimport StyledText from \"../../common/StyledText\";\n\nexport const TagList = styled.div`\n  flex-wrap: wrap;\n  margin-bottom: 0.5em;\n`;\n\nexport const Tag = styled(StyledText)`\n  background-color: #e37b40;\n  color: white;\n  margin: 2px 5px;\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 0.7em;\n`;\n\nconst WorkExperience = (props: IWorkExperienceMarkdown) => (\n  <div>{renderAst(props.htmlAst)}</div>\n);\n\nexport default WorkExperience;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport StyledText from \"../../common/StyledText\";\n\ninterface IAvatarProps {\n  imageUrl: string;\n  name: string;\n}\n\nconst AvatarContainer = styled.div`\n  margin: 0 auto;\n`;\n\nconst AvatarImage = styled.img`\n  width: 150px;\n  height: 150px;\n  margin: 10px auto;\n  border-radius: 75px;\n`;\n\nconst Avatar = (props: IAvatarProps) => (\n  <AvatarContainer>\n    <AvatarImage src={props.imageUrl} />\n    <StyledText type=\"h1\" fontWeight=\"bold\">\n      {props.name}\n    </StyledText>\n  </AvatarContainer>\n);\n\nexport default Avatar;\n","import { Link } from \"gatsby\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport { CentredRow } from \"../../common/Grid\";\n\ninterface ILinkProps {\n  path: string;\n  name: string;\n}\n\ninterface INavigationProps {\n  links: ILinkProps[];\n}\n\nconst NavigationContainer = styled.ul`\n  list-style: none;\n  display: flex;\n  margin: 0 auto 1rem auto;\n  padding: 0;\n`;\n\nconst NavigationLinkContainer = styled.li`\n  margin: 0 10px;\n`;\n\nconst StyledLink = styled(Link).attrs({\n  activeClassName: \"active\"\n})`\n  color: lightgrey;\n  font-weight: bold;\n\n  &:hover {\n    color: lightblue;\n    text-decoration: none;\n    border-bottom: 2px solid lightblue;\n  }\n\n  &.active {\n    color: black;\n    border-bottom: 2px solid grey;\n  }\n`;\n\nconst NavigationLink = (props: ILinkProps) => (\n  <NavigationLinkContainer>\n    <StyledLink to={props.path}>{props.name}</StyledLink>\n  </NavigationLinkContainer>\n);\n\nconst Navigation = (props: INavigationProps) => (\n  <CentredRow>\n    <NavigationContainer>\n      {props.links.map(link => (\n        <NavigationLink {...link} key={link.path} />\n      ))}\n    </NavigationContainer>\n  </CentredRow>\n);\n\nexport default Navigation;\n","import { graphql, StaticQuery } from \"gatsby\";\nimport * as React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { createGlobalStyle } from \"styled-components\";\nimport Avatar from \"../header/avatar\";\nimport Navigation from \"../header/navigation\";\nimport { CentredRow, Container } from \"./Grid\";\n\nconst GlobalStyle = createGlobalStyle`\n  @import url(\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:200,400,400i,700\");\n\n  html {\n    font: 112.5%/1.56 \"Source Sans Pro\", sans-serif;\n    /* font-family: 'Source Sans Pro', sans-serif;\n      font-size: 18px; */\n    font-weight: 400;\n    margin: 0;\n    color: hsla(0, 0%, 0%, 0.7);\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    font-weight: 200;\n    margin: 0;\n    padding: 0;\n    color: hsla(0, 0%, 0%, 0.85);\n  }\n\n  a {\n    text-decoration: none;\n    color: #419eda;\n  }\n\n  a:hover {\n    text-decoration: underline;\n    color: #2a6496;\n  }\n`;\n\nconst PageLayout = (props: { children: React.ReactChild }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            avatar\n            navigation {\n              path\n              name\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <GlobalStyle />\n        <Helmet title={data.site.siteMetadata.title} />\n        <Container>\n          <CentredRow>\n            <Avatar\n              imageUrl={data.site.siteMetadata.avatar}\n              name={data.site.siteMetadata.title}\n            />\n          </CentredRow>\n\n          <Navigation links={data.site.siteMetadata.navigation} />\n\n          {props.children}\n        </Container>\n      </>\n    )}\n  />\n);\n\nexport default PageLayout;\n"],"sourceRoot":""}