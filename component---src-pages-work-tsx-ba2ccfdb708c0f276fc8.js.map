{"version":3,"sources":["webpack:///./src/components/work/work_title/index.tsx","webpack:///./src/components/work/work_experience/index.tsx","webpack:///./src/components/work/work_experience_list/index.tsx","webpack:///./src/pages/work.tsx","webpack:///./src/components/text/index.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout/grid/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/utils/markdown.tsx","webpack:///./src/components/header/avatar/index.tsx","webpack:///./src/components/header/navigation/index.tsx","webpack:///./src/components/layout/page_layout/index.tsx"],"names":["HeadlineRow","styled","Row","withConfig","displayName","componentId","WorkTitle","props","react","components_text","type","fontWeight","title","location","color","period","Blurb","blockquote","TagList","div","Tag","StyledText","WorkExperience","key","id","work_title","companyName","time","renderAst","htmlAst","tags","map","tag","List","WorkExperienceList","workExperience","we","work_experience","Object","assign","WorkPage","data","mergedData","allWorkJson","edges","item","relevantMarkdown","allMarkdownRemark","find","mdItem","node","frontmatter","Error","page_layout","work_experience_list","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","styled_components__WEBPACK_IMPORTED_MODULE_1__","className","children","calculateFontWeight","fontStyle","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","createElement","Consumer","staticQueryData","query","render","propTypes","PropTypes","object","string","isRequired","func","Container","CentredRow","styled_components__WEBPACK_IMPORTED_MODULE_0__","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","rehype_react__WEBPACK_IMPORTED_MODULE_1__","rehype_react__WEBPACK_IMPORTED_MODULE_1___default","_components_text__WEBPACK_IMPORTED_MODULE_2__","rehypeReact","component","Compiler","AvatarContainer","AvatarImage","img","Avatar","src","imageUrl","name","NavigationContainer","ul","NavigationLinkContainer","li","StyledLink","Link","attrs","activeClassName","NavigationLink","to","path","Navigation","grid","links","link","navigation_NavigationLink","GlobalStyle","createGlobalStyle","_templateObject","PageLayout","gatsby_browser_entry","Helmet_default","site","siteMetadata","avatar","navigation","_1024071770"],"mappings":"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","file":"component---src-pages-work-tsx-ba2ccfdb708c0f276fc8.js","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Row } from \"../../layout/grid\";\nimport StyledText from \"../../text\";\n\ninterface IWorkEducationHeadlineProps {\n  title: string;\n  location: string;\n  period: string;\n}\n\nconst HeadlineRow = styled(Row)`\n  justify-content: space-between;\n  flex-wrap: wrap;\n  align-items: center;\n  @media (max-width: 900px) {\n    margin-bottom: 5px;\n  }\n`;\n\nconst WorkTitle = (props: IWorkEducationHeadlineProps) => (\n  <HeadlineRow>\n    <StyledText type=\"p\">\n      <StyledText type=\"span\" fontWeight=\"bold\">\n        {props.title}\n      </StyledText>{\" \"}\n      at <StyledText type=\"span\">{props.location}</StyledText>\n    </StyledText>\n    <StyledText type=\"span\" color=\"gray\">\n      {props.period}\n    </StyledText>\n  </HeadlineRow>\n);\n\nexport default WorkTitle;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { IWorkExperienceItemType } from \"../../../pages/work\";\nimport { renderAst } from \"../../../utils/markdown\";\nimport StyledText from \"../../text\";\nimport WorkTitle from \"../work_title\";\n\nconst Blurb = styled.blockquote`\n  margin: 0em 0em 1em 0em;\n  padding: 0 0.5em;\n  color: hsla(0, 0%, 0%, 0.6);\n  border-left: 0.39rem solid hsla(0, 0%, 0%, 0.13);\n  font-size: 1em;\n  p {\n    margin-bottom: 0.5em;\n  }\n\n  li {\n    margin-bottom: 0px;\n  }\n`;\n\nconst TagList = styled.div`\n  flex-wrap: wrap;\n  margin-bottom: 0.5em;\n`;\n\nconst Tag = styled(StyledText)`\n  background-color: #e37b40;\n  color: white;\n  margin: 2px 5px;\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 0.7em;\n`;\n\nconst WorkExperience = (props: IWorkExperienceItemType) => (\n  <div key={props.id}>\n    <WorkTitle\n      title={props.title}\n      location={props.companyName}\n      period={props.time}\n    />\n    <Blurb>{renderAst(props.htmlAst)}</Blurb>\n    <TagList>\n      {props.tags.map(tag => (\n        <Tag key={tag} type=\"span\">\n          {tag}\n        </Tag>\n      ))}\n    </TagList>\n  </div>\n);\n\nexport default WorkExperience;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { IWorkExperienceItemType } from \"../../../pages/work\";\nimport StyledText from \"../../text\";\nimport WorkExperience from \"../work_experience\";\n\nconst List = styled.div`\n  & > div:not(:first-child) {\n    border-top: 1px solid hsla(0, 0%, 0%, 0.2);\n  }\n`;\n\ninterface IWorkExperienceProps {\n  workExperience: IWorkExperienceItemType[];\n}\n\nconst WorkExperienceList = (props: IWorkExperienceProps) => (\n  <div>\n    <StyledText type=\"h2\">💼 Work Experience</StyledText>\n    <List>\n      {props.workExperience.map(we => (\n        <WorkExperience {...we} key={we.id} />\n      ))}\n    </List>\n  </div>\n);\n\nexport default WorkExperienceList;\n","import { graphql } from \"gatsby\";\nimport * as React from \"react\";\nimport PageLayout from \"../components/layout/page_layout\";\nimport WorkExperienceList from \"../components/work/work_experience_list\";\n\ninterface IWorkExperienceJson {\n  companyName: string;\n  time: string;\n  tags: [string];\n  title: string;\n  id: string;\n}\n\ninterface IWorkExperienceMarkdown {\n  htmlAst: string;\n  frontmatter: {\n    title: string;\n  };\n}\n\nexport interface IWorkExperienceItemType\n  extends IWorkExperienceJson,\n    IWorkExperienceMarkdown {}\n\ninterface IWorkPageProps {\n  data: {\n    allWorkJson: {\n      edges: [\n        {\n          node: IWorkExperienceJson;\n        }\n      ];\n    };\n    allMarkdownRemark: {\n      edges: [\n        {\n          node: IWorkExperienceMarkdown;\n        }\n      ];\n    };\n  };\n}\n\nconst WorkPage = (props: IWorkPageProps) => {\n  const data = props.data;\n\n  const mergedData: IWorkExperienceItemType[] = data.allWorkJson.edges.map(\n    item => {\n      const relevantMarkdown = data.allMarkdownRemark.edges.find(mdItem => {\n        return mdItem.node.frontmatter.title === item.node.id;\n      });\n\n      if (relevantMarkdown == null) {\n        throw new Error(\"Could not find markdown for json\");\n      }\n\n      return { ...item.node, ...relevantMarkdown.node };\n    }\n  );\n\n  return (\n    <PageLayout>\n      <WorkExperienceList workExperience={mergedData} />\n    </PageLayout>\n  );\n};\n\nexport default WorkPage;\n\nexport const pageQuery = graphql`\n  query WorkPage {\n    allWorkJson(sort: { fields: [order] }) {\n      edges {\n        node {\n          companyName\n          time\n          tags\n          title\n          id\n        }\n      }\n    }\n\n    allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/.*work.*/\" } }) {\n      edges {\n        node {\n          htmlAst\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\ntype Headers = \"h1\" | \"h2\" | \"h3\";\ntype OtherTypes = \"p\" | \"span\";\ntype TextType = Headers | OtherTypes;\n\ninterface ITextProps {\n  children: React.ReactChild | React.ReactChild[];\n  type: TextType;\n  fontWeight?: \"normal\" | \"bold\";\n  fontStyle?: \"italic\";\n  color?: string;\n  className?: string;\n}\n\nconst Text = (props: ITextProps) => {\n  if (props.type === \"h1\") {\n    return <h1 className={props.className}>{props.children}</h1>;\n  } else if (props.type === \"h2\") {\n    return <h2 className={props.className}>{props.children}</h2>;\n  } else if (props.type === \"h3\") {\n    return <h3 className={props.className}>{props.children}</h3>;\n  } else if (props.type === \"p\") {\n    return <p className={props.className}>{props.children}</p>;\n  } else if (props.type === \"span\") {\n    return <span className={props.className}>{props.children}</span>;\n  }\n};\n\nfunction calculateFontWeight(props: ITextProps) {\n  if (props.fontWeight === \"bold\") {\n    return 700;\n  } else if (\n    props.type === \"h1\" ||\n    props.type === \"h2\" ||\n    props.type === \"h3\"\n  ) {\n    return 200;\n  } else {\n    return 400;\n  }\n}\n\nconst StyledText = styled<ITextProps>(Text)`\n  font-weight: ${props => calculateFontWeight(props)};\n  font-style: ${props =>\n    props.fontStyle !== null ? props.fontStyle : \"normal\"};\n  color: ${props =>\n    props.color !== null ? props.color : \"hsla(0, 0 %, 0 %, 0.7)\"};\n`;\n\nexport default StyledText;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (max-width: 900px) {\n    padding: 10px;\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n`;\n\nexport const CentredRow = styled(Row)`\n  justify-items: center;\n  width: 100%;\n`;\n\nexport const Column = styled(Row)`\n  display: flex;\n  flex-direction: column;\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\";\nimport * as React from \"react\";\nimport rehypeReact from \"rehype-react\";\nimport StyledText from \"../components/text\";\n\nexport const renderAst = new rehypeReact({\n  createElement: (\n    component: string,\n    props: any = {},\n    children: React.ReactChild[] = []\n  ) => {\n    if (component === \"h1\") {\n      return (\n        <StyledText type=\"h1\" key={props.key}>\n          {children}\n        </StyledText>\n      );\n    } else if (component === \"h2\") {\n      return (\n        <StyledText type=\"h2\" key={props.key}>\n          {children}\n        </StyledText>\n      );\n    } else if (component === \"h3\") {\n      return (\n        <StyledText type=\"h3\" key={props.key}>\n          {children}\n        </StyledText>\n      );\n    } else if (component === \"p\") {\n      return (\n        <StyledText type=\"p\" key={props.key}>\n          {children}\n        </StyledText>\n      );\n    } else if (component === \"strong\") {\n      return (\n        <StyledText type=\"span\" fontWeight=\"bold\" key={props.key}>\n          {children}\n        </StyledText>\n      );\n    } else if (component === \"em\") {\n      return (\n        <StyledText type=\"span\" fontStyle=\"italic\" key={props.key}>\n          {children}\n        </StyledText>\n      );\n    } else if (\n      component === \"div\" ||\n      component === \"a\" ||\n      component === \"ul\" ||\n      component === \"li\"\n    ) {\n      return React.createElement(component, props, children);\n    } else {\n      return <div>NOT ABLE TO HANDLE {component}</div>;\n    }\n  }\n}).Compiler;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport StyledText from \"../../text\";\n\ninterface IAvatarProps {\n  imageUrl: string;\n  name: string;\n}\n\nconst AvatarContainer = styled.div`\n  margin: 0 auto;\n`;\n\nconst AvatarImage = styled.img`\n  width: 150px;\n  height: 150px;\n  margin: 10px auto;\n  border-radius: 75px;\n`;\n\nconst Avatar = (props: IAvatarProps) => (\n  <AvatarContainer>\n    <AvatarImage src={props.imageUrl} />\n    <StyledText type=\"h1\" fontWeight=\"bold\">\n      {props.name}\n    </StyledText>\n  </AvatarContainer>\n);\n\nexport default Avatar;\n","import { Link } from \"gatsby\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport { CentredRow } from \"../../layout/grid\";\n\ninterface ILinkProps {\n  path: string;\n  name: string;\n}\n\ninterface INavigationProps {\n  links: ILinkProps[];\n}\n\nconst NavigationContainer = styled.ul`\n  list-style: none;\n  display: flex;\n  margin: 0 auto 1rem auto;\n  padding: 0;\n`;\n\nconst NavigationLinkContainer = styled.li`\n  margin: 0 10px;\n`;\n\nconst StyledLink = styled(Link).attrs({\n  activeClassName: \"active\"\n})`\n  color: lightgrey;\n  font-weight: bold;\n\n  &:hover {\n    color: lightblue;\n    text-decoration: none;\n    border-bottom: 2px solid lightblue;\n  }\n\n  &.active {\n    color: black;\n    border-bottom: 2px solid grey;\n  }\n`;\n\nconst NavigationLink = (props: ILinkProps) => (\n  <NavigationLinkContainer>\n    <StyledLink to={props.path}>{props.name}</StyledLink>\n  </NavigationLinkContainer>\n);\n\nconst Navigation = (props: INavigationProps) => (\n  <CentredRow>\n    <NavigationContainer>\n      {props.links.map(link => (\n        <NavigationLink {...link} key={link.path} />\n      ))}\n    </NavigationContainer>\n  </CentredRow>\n);\n\nexport default Navigation;\n","import { graphql, StaticQuery } from \"gatsby\";\nimport * as React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { createGlobalStyle } from \"styled-components\";\nimport Avatar from \"../../header/avatar\";\nimport Navigation from \"../../header/navigation\";\nimport { CentredRow, Container } from \"../grid\";\n\nconst GlobalStyle = createGlobalStyle`\n  @import url(\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:200,400,400i,700\");\n\n  html {\n    font: 112.5%/1.56 \"Source Sans Pro\", sans-serif;\n    /* font-family: 'Source Sans Pro', sans-serif;\n      font-size: 18px; */\n    font-weight: 400;\n    margin: 0;\n    color: hsla(0, 0%, 0%, 0.7);\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    font-weight: 200;\n    margin: 0;\n    padding: 0;\n    color: hsla(0, 0%, 0%, 0.85);\n  }\n\n  a {\n    text-decoration: none;\n    color: #419eda;\n  }\n\n  a:hover {\n    text-decoration: underline;\n    color: #2a6496;\n  }\n`;\n\nconst PageLayout = (props: { children: React.ReactChild }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            avatar\n            navigation {\n              path\n              name\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <GlobalStyle />\n        <Helmet title={data.site.siteMetadata.title} />\n        <Container>\n          <CentredRow>\n            <Avatar\n              imageUrl={data.site.siteMetadata.avatar}\n              name={data.site.siteMetadata.title}\n            />\n          </CentredRow>\n\n          <Navigation links={data.site.siteMetadata.navigation} />\n\n          {props.children}\n        </Container>\n      </>\n    )}\n  />\n);\n\nexport default PageLayout;\n"],"sourceRoot":""}