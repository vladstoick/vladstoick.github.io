{"version":3,"sources":["webpack:///./src/components/work/work_title/index.tsx","webpack:///./src/components/work/work_experience/index.tsx","webpack:///./src/components/work/work_experience_list/index.tsx","webpack:///./src/pages/work.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout/grid/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/text/index.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header/navigation/index.tsx","webpack:///./src/components/header/avatar/index.tsx","webpack:///./src/components/layout/page_layout/index.tsx"],"names":["HeadlineRow","styled","Row","withConfig","displayName","componentId","WorkTitle","props","react","components_text","type","fontWeight","title","location","color","period","Blurb","blockquote","TagList","div","Tag","StyledText","WorkExperience","key","id","work_title","companyName","time","dangerouslySetInnerHTML","__html","html","tags","map","tag","List","WorkExperienceList","workExperience","we","work_experience","Object","assign","WorkPage","data","mergedData","allWorkJson","edges","item","relevantMarkdown","allMarkdownRemark","find","mdItem","node","frontmatter","page_layout","work_experience_list","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","createElement","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","Container","CentredRow","styled_components__WEBPACK_IMPORTED_MODULE_0__","m","module","exports","require","default","styled_components__WEBPACK_IMPORTED_MODULE_1__","className","calculateFontWeight","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","NavigationContainer","ul","NavigationLinkContainer","li","StyledLink","Link","attrs","activeClassName","NavigationLink","to","path","name","Navigation","grid","links","link","navigation_NavigationLink","AvatarContainer","AvatarImage","img","Avatar","src","imageUrl","GlobalStyle","createGlobalStyle","_templateObject","PageLayout","gatsby_browser_entry","Helmet_default","site","siteMetadata","avatar","navigation","_1024071770"],"mappings":"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","file":"component---src-pages-work-tsx-ea4ad80dc7511a5ca0e8.js","sourcesContent":["import * as React from \"react\";\nimport { Row } from \"../../layout/grid\";\nimport styled from \"styled-components\";\nimport StyledText from \"../../text\";\n\ntype WorkEducationHeadlineProps = {\n  title: string;\n  location: string;\n  period: string;\n};\n\nconst HeadlineRow = styled(Row)`\n  justify-content: space-between;\n  flex-wrap: wrap;\n  align-items: center;\n  @media (max-width: 900px) {\n    margin-bottom: 5px;\n  }\n`;\n\nconst WorkTitle = (props: WorkEducationHeadlineProps) => (\n  <HeadlineRow>\n    <StyledText type=\"p\">\n      <StyledText type=\"span\" fontWeight=\"bold\">\n        {props.title}\n      </StyledText>{\" \"}\n      at <StyledText type=\"span\">{props.location}</StyledText>\n    </StyledText>\n    <StyledText type=\"span\" color=\"gray\">\n      {props.period}\n    </StyledText>\n  </HeadlineRow>\n);\n\nexport default WorkTitle;\n","import * as React from \"react\";\nimport WorkTitle from \"../work_title\";\nimport { IWorkExperienceItemType } from \"../../../pages/work\";\nimport styled from \"styled-components\";\nimport StyledText from \"../../text\";\n\nconst Blurb = styled.blockquote`\n  margin: 0em 0em 1em 0em;\n  padding: 0 0.5em;\n  color: hsla(0, 0%, 0%, 0.6);\n  border-left: 0.39rem solid hsla(0, 0%, 0%, 0.13);\n  font-size: 1em;\n  p {\n    margin-bottom: 0.5em;\n  }\n\n  li {\n    margin-bottom: 0px;\n  }\n`;\n\nconst TagList = styled.div`\n  flex-wrap: wrap;\n  margin-bottom: 0.5em;\n`;\n\nconst Tag = styled(StyledText)`\n  background-color: #e37b40;\n  color: white;\n  margin: 2px 5px;\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 0.7em;\n`;\n\nconst WorkExperience = (props: IWorkExperienceItemType) => (\n  <div key={props.id}>\n    <WorkTitle\n      title={props.title}\n      location={props.companyName}\n      period={props.time}\n    />\n    <Blurb>\n      <div dangerouslySetInnerHTML={{ __html: props.html }} />\n    </Blurb>\n    <TagList>\n      {props.tags.map(tag => (\n        <Tag key={tag} type=\"span\">\n          {tag}\n        </Tag>\n      ))}\n    </TagList>\n  </div>\n);\n\nexport default WorkExperience;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { IWorkExperienceItemType } from \"../../../pages/work\";\nimport WorkExperience from \"../work_experience\";\nimport StyledText from \"../../text\";\n\nconst List = styled.div`\n  & > div:not(:first-child) {\n    border-top: 1px solid hsla(0, 0%, 0%, 0.2);\n  }\n`;\n\ninterface IWorkExperienceProps {\n  workExperience: IWorkExperienceItemType[];\n}\n\nconst WorkExperienceList = (props: IWorkExperienceProps) => (\n  <div>\n    <StyledText type=\"h2\">💼 Work Experience</StyledText>\n    <List>\n      {props.workExperience.map(we => (\n        <WorkExperience {...we} key={we.id} />\n      ))}\n    </List>\n  </div>\n);\n\nexport default WorkExperienceList;\n","import { graphql } from \"gatsby\";\nimport * as React from \"react\";\nimport PageLayout from \"../components/layout/page_layout\";\nimport WorkExperienceList from \"../components/work/work_experience_list\";\n\ninterface IWorkExperienceJson {\n  companyName: string;\n  time: string;\n  tags: [string];\n  title: string;\n  id: string;\n}\n\ninterface IWorkExperienceMarkdown {\n  html: string;\n  frontmatter: {\n    title: string;\n  };\n}\n\nexport interface IWorkExperienceItemType\n  extends IWorkExperienceJson,\n    IWorkExperienceMarkdown {}\n\ninterface WorkPageProps {\n  data: {\n    allWorkJson: {\n      edges: [\n        {\n          node: IWorkExperienceJson;\n        }\n      ];\n    };\n    allMarkdownRemark: {\n      edges: [\n        {\n          node: IWorkExperienceMarkdown;\n        }\n      ];\n    };\n  };\n}\n\nconst WorkPage = (props: WorkPageProps) => {\n  const data = props.data;\n\n  const mergedData: IWorkExperienceItemType[] = data.allWorkJson.edges.map(\n    item => {\n      const relevantMarkdown = data.allMarkdownRemark.edges.find(mdItem => {\n        return mdItem.node.frontmatter.title === item.node.id;\n      });\n\n      if (relevantMarkdown == null) {\n        throw \"Could not find markdown for json\";\n      }\n\n      return { ...item.node, ...relevantMarkdown.node };\n    }\n  );\n\n  return (\n    <PageLayout>\n      <WorkExperienceList workExperience={mergedData} />\n    </PageLayout>\n  );\n};\n\nexport default WorkPage;\n\nexport const pageQuery = graphql`\n  query WorkPage {\n    allWorkJson(sort: { fields: [order] }) {\n      edges {\n        node {\n          companyName\n          time\n          tags\n          title\n          id\n        }\n      }\n    }\n\n    allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/.*work.*/\" } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (max-width: 900px) {\n    padding: 10px;\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n`;\n\nexport const CentredRow = styled(Row)`\n  justify-items: center;\n  width: 100%;\n`;\n\nexport const Column = styled(Row)`\n  display: flex;\n  flex-direction: column;\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\ninterface TextProps {\n  children: React.ReactChild | React.ReactChild[];\n  type: \"h1\" | \"h2\" | \"p\" | \"span\";\n  fontWeight?: \"normal\" | \"bold\";\n  color?: string;\n  className?: string;\n}\n\nconst Text = (props: TextProps) => {\n  if (props.type === \"h1\") {\n    return <h1 className={props.className}>{props.children}</h1>;\n  } else if (props.type === \"h2\") {\n    return <h2 className={props.className}>{props.children}</h2>;\n  } else if (props.type === \"p\") {\n    return <p className={props.className}>{props.children}</p>;\n  } else if (props.type === \"span\") {\n    return <span className={props.className}>{props.children}</span>;\n  }\n};\n\nfunction calculateFontWeight(props: TextProps) {\n  if (props.fontWeight === \"bold\") {\n    return 700;\n  } else if (props.type === \"h1\" || props.type === \"h2\") {\n    return 200;\n  } else {\n    return 400;\n  }\n}\n\nconst StyledText = styled<TextProps>(Text)`\n  font-weight: ${props => calculateFontWeight(props)};\n  color: ${props =>\n    props.color !== null ? props.color : \"hsla(0, 0 %, 0 %, 0.7)\"};\n`;\n\nexport default StyledText;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\";\nimport * as React from \"react\";\nimport { CentredRow } from \"../../layout/grid\";\nimport styled from \"styled-components\";\n\ntype LinkProps = {\n  path: string;\n  name: string;\n};\n\ntype NavigationProps = {\n  links: Array<LinkProps>;\n};\n\nconst NavigationContainer = styled.ul`\n  list-style: none;\n  display: flex;\n  margin: 0 auto 1rem auto;\n  padding: 0;\n`;\n\nconst NavigationLinkContainer = styled.li`\n  margin: 0 10px;\n`;\n\nconst StyledLink = styled(Link).attrs({\n  activeClassName: \"active\"\n})`\n  color: lightgrey;\n  font-weight: bold;\n\n  &:hover {\n    color: lightblue;\n    text-decoration: none;\n    border-bottom: 2px solid lightblue;\n  }\n\n  &.active {\n    color: black;\n    border-bottom: 2px solid grey;\n  }\n`;\n\nconst NavigationLink = (props: LinkProps) => (\n  <NavigationLinkContainer>\n    <StyledLink to={props.path}>{props.name}</StyledLink>\n  </NavigationLinkContainer>\n);\n\nconst Navigation = (props: NavigationProps) => (\n  <CentredRow>\n    <NavigationContainer>\n      {props.links.map(link => (\n        <NavigationLink {...link} key={link.path} />\n      ))}\n    </NavigationContainer>\n  </CentredRow>\n);\n\nexport default Navigation;\n","import * as React from \"react\";\nimport StyledText from \"../../text\";\nimport styled from \"styled-components\";\n\ninterface IAvatarProps {\n  imageUrl: string;\n  name: string;\n}\n\nconst AvatarContainer = styled.div`\n  margin: 0 auto;\n`;\n\nconst AvatarImage = styled.img`\n  width: 150px;\n  height: 150px;\n  margin: 10px auto;\n  border-radius: 75px;\n`;\n\nconst Avatar = (props: IAvatarProps) => (\n  <AvatarContainer>\n    <AvatarImage src={props.imageUrl} />\n    <StyledText type=\"h1\" fontWeight=\"bold\">\n      {props.name}\n    </StyledText>\n  </AvatarContainer>\n);\n\nexport default Avatar;\n","import { graphql, StaticQuery } from \"gatsby\";\nimport * as React from \"react\";\nimport Helmet from \"react-helmet\";\nimport Navigation from \"../../header/navigation\";\nimport { CentredRow, Container } from \"../grid\";\nimport Avatar from \"../../header/avatar\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  @import url(\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:200,400,400i,700\");\n\n  html {\n    font: 112.5%/1.56 \"Source Sans Pro\", sans-serif;\n    /* font-family: 'Source Sans Pro', sans-serif;\n      font-size: 18px; */\n    font-weight: 400;\n    margin: 0;\n    color: hsla(0, 0%, 0%, 0.7);\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    font-weight: 200;\n    margin: 0;\n    padding: 0;\n    color: hsla(0, 0%, 0%, 0.85);\n  }\n\n  a {\n    text-decoration: none;\n    color: #419eda;\n  }\n\n  a:hover {\n    text-decoration: underline;\n    color: #2a6496;\n  }\n`;\n\nconst PageLayout = (props: { children: React.ReactChild }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            avatar\n            navigation {\n              path\n              name\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <GlobalStyle />\n        <Helmet title={data.site.siteMetadata.title} />\n        <Container>\n          <CentredRow>\n            <Avatar\n              imageUrl={data.site.siteMetadata.avatar}\n              name={data.site.siteMetadata.title}\n            />\n          </CentredRow>\n\n          <Navigation links={data.site.siteMetadata.navigation} />\n\n          {props.children}\n        </Container>\n      </>\n    )}\n  />\n);\n\nexport default PageLayout;\n"],"sourceRoot":""}