{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/components/common/StyledText.tsx","webpack:///./src/components/common/Grid.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/common/Blockquote.tsx","webpack:///./src/components/work/work_title/index.tsx","webpack:///./src/utils/markdown.tsx","webpack:///./src/components/work/work_experience/index.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header/avatar/index.tsx","webpack:///./src/components/header/navigation/index.tsx","webpack:///./src/components/common/PageLayout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","_components_common_PageLayout__WEBPACK_IMPORTED_MODULE_1__","_utils_markdown__WEBPACK_IMPORTED_MODULE_2__","IndexPage","props","renderAst","data","markdownRemark","htmlAst","styled_components__WEBPACK_IMPORTED_MODULE_1__","StyledText","styled","type","className","children","withConfig","displayName","componentId","fontWeight","calculateFontWeight","fontStyle","color","Container","Row","CentredRow","styled_components__WEBPACK_IMPORTED_MODULE_0__","div","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","createElement","Consumer","staticQueryData","query","render","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Blurb","blockquote","HeadlineRow","WorkTitle","react","title","location","period","rehypeReact","component","key","work_experience","work_title","Compiler","TagList","Tag","_common_StyledText__WEBPACK_IMPORTED_MODULE_3__","WorkExperience","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","AvatarContainer","AvatarImage","img","Avatar","src","imageUrl","name","NavigationContainer","ul","NavigationLinkContainer","li","StyledLink","Link","attrs","activeClassName","NavigationLink","to","path","Navigation","Grid","links","map","link","navigation_NavigationLink","GlobalStyle","createGlobalStyle","_templateObject","PageLayout","gatsby_browser_entry","Helmet_default","site","siteMetadata","avatar","navigation","_1024071770"],"mappings":"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","file":"component---src-pages-index-tsx-bac007670722f68ed656.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport * as React from \"react\";\nimport PageLayout from \"../components/common/PageLayout\";\nimport { renderAst } from \"../utils/markdown\";\n\ninterface IIndexPageProps {\n  data: {\n    markdownRemark: {\n      htmlAst: string;\n    };\n  };\n}\n\nconst IndexPage = (props: IIndexPageProps) => (\n  <PageLayout>\n    <div>{renderAst(props.data.markdownRemark.htmlAst)}</div>\n  </PageLayout>\n);\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query IndexPage {\n    markdownRemark(frontmatter: { title: { eq: \"HomepageBlurb\" } }) {\n      htmlAst\n    }\n  }\n`;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\ntype Headers = \"h1\" | \"h2\" | \"h3\";\ntype OtherTypes = \"p\" | \"span\";\ntype TextType = Headers | OtherTypes;\n\ninterface ITextProps {\n  children: React.ReactChild | React.ReactChild[];\n  type: TextType;\n  fontWeight?: \"normal\" | \"bold\";\n  fontStyle?: \"italic\";\n  color?: string;\n  className?: string;\n}\n\nconst Text = (props: ITextProps) => {\n  if (props.type === \"h1\") {\n    return <h1 className={props.className}>{props.children}</h1>;\n  } else if (props.type === \"h2\") {\n    return <h2 className={props.className}>{props.children}</h2>;\n  } else if (props.type === \"h3\") {\n    return <h3 className={props.className}>{props.children}</h3>;\n  } else if (props.type === \"p\") {\n    return <p className={props.className}>{props.children}</p>;\n  } else if (props.type === \"span\") {\n    return <span className={props.className}>{props.children}</span>;\n  }\n};\n\nfunction calculateFontWeight(props: ITextProps) {\n  if (props.fontWeight === \"bold\") {\n    return 700;\n  } else if (\n    props.type === \"h1\" ||\n    props.type === \"h2\" ||\n    props.type === \"h3\"\n  ) {\n    return 200;\n  } else {\n    return 400;\n  }\n}\n\nconst StyledText = styled<ITextProps>(Text)`\n  font-weight: ${props => calculateFontWeight(props)};\n  font-style: ${props =>\n    props.fontStyle !== null ? props.fontStyle : \"normal\"};\n  color: ${props =>\n    props.color !== null ? props.color : \"hsla(0, 0 %, 0 %, 0.7)\"};\n`;\n\nexport default StyledText;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (max-width: 900px) {\n    padding: 10px;\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n`;\n\nexport const CentredRow = styled(Row)`\n  justify-items: center;\n  width: 100%;\n`;\n\nexport const Column = styled(Row)`\n  display: flex;\n  flex-direction: column;\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import styled from \"styled-components\";\n\nexport const Blurb = styled.blockquote`\n  margin: 0em 0em 1em 0em;\n  padding: 0 0.5em;\n  color: hsla(0, 0%, 0%, 0.6);\n  border-left: 0.39rem solid hsla(0, 0%, 0%, 0.13);\n  font-size: 1em;\n  p {\n    margin-bottom: 0.5em;\n  }\n\n  li {\n    margin-bottom: 0px;\n  }\n`;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Row } from \"../../common/Grid\";\nimport StyledText from \"../../common/StyledText\";\n\ninterface IWorkEducationHeadlineProps {\n  title: string;\n  location: string;\n  period: string;\n}\n\nconst HeadlineRow = styled(Row)`\n  justify-content: space-between;\n  flex-wrap: wrap;\n  align-items: center;\n  @media (max-width: 900px) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const WorkTitle = (props: IWorkEducationHeadlineProps) => (\n  <HeadlineRow>\n    <StyledText type=\"p\">\n      <StyledText type=\"span\" fontWeight=\"bold\">\n        {props.title}\n      </StyledText>{\" \"}\n      at <StyledText type=\"span\">{props.location}</StyledText>\n    </StyledText>\n    <StyledText type=\"span\" color=\"gray\">\n      {props.period}\n    </StyledText>\n  </HeadlineRow>\n);\n\nexport default WorkTitle;\n","import * as React from \"react\";\nimport rehypeReact from \"rehype-react\";\nimport { Blurb } from \"../components/common/Blockquote\";\nimport StyledText from \"../components/common/StyledText\";\nimport { Tag, TagList } from \"../components/work/work_experience\";\nimport WorkTitle from \"../components/work/work_title\";\n\nexport const createElement = (\n  component: string,\n  props: any = {},\n  children: React.ReactChild[] = []\n) => {\n  if (\n    component === \"h1\" ||\n    component === \"h2\" ||\n    component === \"h3\" ||\n    component === \"p\"\n  ) {\n    return (\n      <StyledText type={component} key={props.key}>\n        {children}\n      </StyledText>\n    );\n  } else if (component === \"strong\") {\n    return (\n      <StyledText type=\"span\" fontWeight=\"bold\" key={props.key}>\n        {children}\n      </StyledText>\n    );\n  } else if (component === \"em\") {\n    return (\n      <StyledText type=\"span\" fontStyle=\"italic\" key={props.key}>\n        {children}\n      </StyledText>\n    );\n  } else if (component === \"taglist\") {\n    return <TagList key={props.key}>{children}</TagList>;\n  } else if (component === \"tag\") {\n    return (\n      <Tag key={props.key} type=\"span\">\n        {children}\n      </Tag>\n    );\n  } else if (component === \"blockquote\") {\n    return <Blurb key={props.key}>{children}</Blurb>;\n  } else if (component === \"worktitle\") {\n    return <WorkTitle {...props} />;\n  } else if (\n    component === \"div\" ||\n    component === \"a\" ||\n    component === \"ul\" ||\n    component === \"li\"\n  ) {\n    return React.createElement(component, props, children);\n  } else {\n    return (\n      <div key={props.key}>\n        NOT ABLE TO HANDLE {component} with props {props}\n      </div>\n    );\n  }\n};\n\nexport const renderAst = new rehypeReact({ createElement }).Compiler;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { IWorkExperienceMarkdown } from \"../../../pages/work\";\nimport { renderAst } from \"../../../utils/markdown\";\nimport StyledText from \"../../common/StyledText\";\n\nexport const TagList = styled.div`\n  flex-wrap: wrap;\n  margin-bottom: 0.5em;\n`;\n\nexport const Tag = styled(StyledText)`\n  background-color: #e37b40;\n  color: white;\n  margin: 2px 5px;\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 0.7em;\n`;\n\nconst WorkExperience = (props: IWorkExperienceMarkdown) => (\n  <div>{renderAst(props.htmlAst)}</div>\n);\n\nexport default WorkExperience;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport StyledText from \"../../common/StyledText\";\n\ninterface IAvatarProps {\n  imageUrl: string;\n  name: string;\n}\n\nconst AvatarContainer = styled.div`\n  margin: 0 auto;\n`;\n\nconst AvatarImage = styled.img`\n  width: 150px;\n  height: 150px;\n  margin: 10px auto;\n  border-radius: 75px;\n`;\n\nconst Avatar = (props: IAvatarProps) => (\n  <AvatarContainer>\n    <AvatarImage src={props.imageUrl} />\n    <StyledText type=\"h1\" fontWeight=\"bold\">\n      {props.name}\n    </StyledText>\n  </AvatarContainer>\n);\n\nexport default Avatar;\n","import { Link } from \"gatsby\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport { CentredRow } from \"../../common/Grid\";\n\ninterface ILinkProps {\n  path: string;\n  name: string;\n}\n\ninterface INavigationProps {\n  links: ILinkProps[];\n}\n\nconst NavigationContainer = styled.ul`\n  list-style: none;\n  display: flex;\n  margin: 0 auto 1rem auto;\n  padding: 0;\n`;\n\nconst NavigationLinkContainer = styled.li`\n  margin: 0 10px;\n`;\n\nconst StyledLink = styled(Link).attrs({\n  activeClassName: \"active\"\n})`\n  color: lightgrey;\n  font-weight: bold;\n\n  &:hover {\n    color: lightblue;\n    text-decoration: none;\n    border-bottom: 2px solid lightblue;\n  }\n\n  &.active {\n    color: black;\n    border-bottom: 2px solid grey;\n  }\n`;\n\nconst NavigationLink = (props: ILinkProps) => (\n  <NavigationLinkContainer>\n    <StyledLink to={props.path}>{props.name}</StyledLink>\n  </NavigationLinkContainer>\n);\n\nconst Navigation = (props: INavigationProps) => (\n  <CentredRow>\n    <NavigationContainer>\n      {props.links.map(link => (\n        <NavigationLink {...link} key={link.path} />\n      ))}\n    </NavigationContainer>\n  </CentredRow>\n);\n\nexport default Navigation;\n","import { graphql, StaticQuery } from \"gatsby\";\nimport * as React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { createGlobalStyle } from \"styled-components\";\nimport Avatar from \"../header/avatar\";\nimport Navigation from \"../header/navigation\";\nimport { CentredRow, Container } from \"./Grid\";\n\nconst GlobalStyle = createGlobalStyle`\n  @import url(\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:200,400,400i,700\");\n\n  html {\n    font: 112.5%/1.56 \"Source Sans Pro\", sans-serif;\n    /* font-family: 'Source Sans Pro', sans-serif;\n      font-size: 18px; */\n    font-weight: 400;\n    margin: 0;\n    color: hsla(0, 0%, 0%, 0.7);\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    font-weight: 200;\n    margin: 0;\n    padding: 0;\n    color: hsla(0, 0%, 0%, 0.85);\n  }\n\n  a {\n    text-decoration: none;\n    color: #419eda;\n  }\n\n  a:hover {\n    text-decoration: underline;\n    color: #2a6496;\n  }\n`;\n\nconst PageLayout = (props: { children: React.ReactChild }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            avatar\n            navigation {\n              path\n              name\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <GlobalStyle />\n        <Helmet title={data.site.siteMetadata.title} />\n        <Container>\n          <CentredRow>\n            <Avatar\n              imageUrl={data.site.siteMetadata.avatar}\n              name={data.site.siteMetadata.title}\n            />\n          </CentredRow>\n\n          <Navigation links={data.site.siteMetadata.navigation} />\n\n          {props.children}\n        </Container>\n      </>\n    )}\n  />\n);\n\nexport default PageLayout;\n"],"sourceRoot":""}