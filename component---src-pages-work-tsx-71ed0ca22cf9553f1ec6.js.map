{"version":3,"sources":["webpack:///./src/components/work/work_experience_list/index.tsx","webpack:///./src/pages/work.tsx"],"names":["List","styled","div","WorkExperienceList","props","StyledText","type","workExperience","map","we","i","key","WorkPage","data","allMarkdownRemark","edges","x","node","PageLayout","pageQuery"],"mappings":"8KAMMA,EAAOC,IAAOC,IAAV,6EAAGD,CAAH,wEAqBKE,EAXY,SAACC,GAAD,OACzB,2BACE,gBAACC,EAAA,EAAD,CAAYC,KAAK,MAAjB,sBACA,gBAACN,EAAD,KACGI,EAAMG,eAAeC,KAAI,SAACC,EAAIC,GAAL,OACxB,gBAAC,IAAD,iBAAoBD,EAApB,CAAwBE,IAAKD,WCpBrC,0CA8BeE,UAVE,SAACR,GAChB,IAAMS,EAAOT,EAAMS,KAAKC,kBAAkBC,MAAMP,KAAI,SAAAQ,GAAC,OAAIA,EAAEC,QAE3D,OACE,gBAACC,EAAA,EAAD,KACE,gBAAC,EAAD,CAAoBX,eAAgBM,MAL1C,IAYaM,EAAY","file":"component---src-pages-work-tsx-71ed0ca22cf9553f1ec6.js","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { IWorkExperienceMarkdown } from \"../../../pages/work\";\nimport StyledText from \"../../common/StyledText\";\nimport WorkExperience from \"../work_experience\";\n\nconst List = styled.div`\n  & > div:not(:first-child) {\n    border-top: 1px solid hsla(0, 0%, 0%, 0.2);\n  }\n`;\n\ninterface IWorkExperienceProps {\n  workExperience: IWorkExperienceMarkdown[];\n}\n\nconst WorkExperienceList = (props: IWorkExperienceProps) => (\n  <div>\n    <StyledText type=\"h2\">ðŸ’¼ Work Experience</StyledText>\n    <List>\n      {props.workExperience.map((we, i) => (\n        <WorkExperience {...we} key={i} />\n      ))}\n    </List>\n  </div>\n);\n\nexport default WorkExperienceList;\n","import { graphql } from \"gatsby\";\nimport * as React from \"react\";\nimport PageLayout from \"../components/common/PageLayout\";\nimport WorkExperienceList from \"../components/work/work_experience_list\";\n\nexport interface IWorkExperienceMarkdown {\n  htmlAst: string;\n}\n\ninterface IWorkPageProps {\n  data: {\n    allMarkdownRemark: {\n      edges: [\n        {\n          node: IWorkExperienceMarkdown;\n        }\n      ];\n    };\n  };\n}\n\nconst WorkPage = (props: IWorkPageProps) => {\n  const data = props.data.allMarkdownRemark.edges.map(x => x.node);\n\n  return (\n    <PageLayout>\n      <WorkExperienceList workExperience={data} />\n    </PageLayout>\n  );\n};\n\nexport default WorkPage;\n\nexport const pageQuery = graphql`\n  query WorkPage {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/.*work.*/\" } }\n      sort: { order: ASC, fields: [frontmatter___order] }\n    ) {\n      edges {\n        node {\n          htmlAst\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}