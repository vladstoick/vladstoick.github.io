{"version":3,"sources":["webpack:///./src/components/work-education-headline.tsx","webpack:///./src/components/work/index.tsx","webpack:///./src/utils/colours.ts","webpack:///./src/pages/work.tsx","webpack:///./src/components/grid.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header/avatar.tsx","webpack:///./src/components/header/navigation.tsx","webpack:///./src/components/layout.tsx"],"names":["HeadlineRow","Row","extend","_templateObject","Position","styled","p","withConfig","displayName","componentId","PositionTitle","span","Period","WorkEducationHeadline","props","react","title","location","period","WorkExperienceTag","TagList","work_templateObject","Blurb","blockquote","WorkExperienceItem","li","key","id","work_education_headline","companyName","time","dangerouslySetInnerHTML","__html","html","tags","map","tag","List","div","WorkExperienceList","workExperience","we","work_WorkExperienceItem","Object","assign","WorkPage","data","console","log","mergedData","allWorkJson","edges","item","relevantMarkdown","allMarkdownRemark","find","mdItem","node","frontmatter","layout","work","pageQuery","Container","CentredRow","Column","_templateObject2","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","createElement","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","AvatarImage","img","AvatarTitle","h1","CentredColumn","Avatar","src","imageUrl","name","NavigationList","ul","NavigationItem","StyledLink","Link","attrs","activeClassName","NavigationLink","to","path","Navigation","grid","links","link","navigation_NavigationLink","Layout","gatsby_browser_entry","Helmet_default","site","siteMetadata","avatar","navigation","_1024071770"],"mappings":"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","file":"component---src-pages-work-tsx-ffc9be64257efd37b7be.js","sourcesContent":["import styled from \"styled-components\";\nimport { Row } from \"./grid\";\nimport * as React from \"react\";\n\nconst HeadlineRow = Row.extend`\n  justify-content: space-between;\n  flex-wrap: wrap;\n  align-items: center;\n  @media (max-width: 900px) {\n    margin-bottom: 5px;\n  }\n`;\n\nconst Position = styled.p`\n  margin-bottom: 0.1em;\n  font-size: 1.2em;\n`;\n\nconst PositionTitle = styled.span`\n  font-weight: bold;\n`;\n\nconst Period = styled.span`\n  color: gray;\n`;\n\nconst WorkEducationHeadline = (props: {\n  title: string;\n  location: string;\n  period: string;\n}) => (\n  <HeadlineRow>\n    <Position>\n      <PositionTitle>{props.title}</PositionTitle> at{\" \"}\n      <span>{props.location}</span>\n    </Position>\n    <Period>{props.period}</Period>\n  </HeadlineRow>\n);\n\nexport default WorkEducationHeadline;\n","import * as React from \"react\";\nimport { Row, Column } from \"./../grid\";\nimport styled from \"styled-components\";\nimport * as colours from \"../../utils/colours\";\nimport WorkEducationHeadline from \"./../work-education-headline\";\nimport { WorkExperienceItemType } from \"../../pages/work\";\n\nconst WorkExperienceTag = styled.span`\n  background-color: ${colours.orange};\n  color: white;\n  margin: 2px 5px;\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 0.7em;\n`;\n\nconst TagList = Row.extend`\n  flex-wrap: wrap;\n  margin-bottom: 0.5em;\n`;\n\nconst Blurb = styled.blockquote`\n  font-size: 1em;\n  p {\n    margin-bottom: 0.5em;\n  }\n\n  li {\n    margin-bottom: 0px;\n  }\n`;\n\nconst Achievement = styled.li`\n  margin-bottom: 0px;\n`;\n\nconst WorkExperienceItem = (props: WorkExperienceItemType) => (\n  <div key={props.id}>\n    <WorkEducationHeadline\n      title={props.title}\n      location={props.companyName}\n      period={props.time}\n    />\n    <Blurb>\n      <div dangerouslySetInnerHTML={{ __html: props.html }} />\n    </Blurb>\n    <TagList>\n      {props.tags.map(tag => (\n        <WorkExperienceTag key={tag}>{tag}</WorkExperienceTag>\n      ))}\n    </TagList>\n  </div>\n);\n\ninterface WorkExperienceProps {\n  workExperience: [WorkExperienceItemType];\n}\n\nconst List = styled.div`\n  & > div:not(:first-child) {\n    border-top: 1px solid hsla(0, 0%, 0%, 0.2);\n  }\n`;\n\nconst WorkExperienceList = (props: WorkExperienceProps) => (\n  <div>\n    <h2>ðŸ’¼ Work Experience</h2>\n    <List>\n      {props.workExperience.map(we => (\n        <WorkExperienceItem {...we} key={we.id} />\n      ))}\n    </List>\n  </div>\n);\n\nexport default WorkExperienceList;\n","export const orange = \"#E37B40\";\nexport const lightBlue = \"#46B29D\";\nexport const darkOrange = \"#DE5B49\";\nexport const darkBlue = \"324D5C\";\nexport const yellow = \"#F0CA4D\";\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport WorkExperienceList from \"../components/work\";\nimport Layout from \"../components/layout\";\n\ninterface WorkExperienceJson {\n  companyName: string;\n  time: string;\n  tags: [string];\n  title: string;\n  id: string;\n}\n\ninterface WorkExperienceMarkdown {\n  html: string;\n  frontmatter: {\n    title: string;\n  };\n}\n\nexport interface WorkExperienceItemType\n  extends WorkExperienceJson,\n    WorkExperienceMarkdown {}\n\ninterface WorkPageProps {\n  data: {\n    allWorkJson: {\n      edges: [\n        {\n          node: WorkExperienceJson;\n        }\n      ];\n    };\n    allMarkdownRemark: {\n      edges: [\n        {\n          node: WorkExperienceMarkdown;\n        }\n      ];\n    };\n  };\n}\n\nconst WorkPage = (props: WorkPageProps) => {\n  let data = props.data;\n\n  console.log(props);\n\n  const mergedData = data.allWorkJson.edges.map(item => {\n    const relevantMarkdown = data.allMarkdownRemark.edges.find(mdItem => {\n      return mdItem.node.frontmatter.title == item.node.id;\n    });\n    return { ...item.node, ...relevantMarkdown.node };\n  });\n\n  return (\n    <Layout>\n      <WorkExperienceList workExperience={mergedData} />\n    </Layout>\n  );\n};\n\nexport default WorkPage;\n\nexport const pageQuery = graphql`\n  query WorkPage {\n    allWorkJson(sort: { fields: [order] }) {\n      edges {\n        node {\n          companyName\n          time\n          tags\n          title\n          id\n        }\n      }\n    }\n\n    allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/.*work.*/\" } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (max-width: 900px) {\n    padding: 10px;\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n`;\n\nexport const CentredRow = Row.extend`\n  justify-items: center;\n  width: 100%;\n`;\n\nexport const Column = Row.extend`\n  flex-direction: column;\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Column } from \"../grid\";\n\nconst AvatarImage = styled.img`\n  width: 150px;\n  height: 150px;\n  margin: 10px auto;\n  border-radius: 75px;\n`;\n\nconst AvatarTitle = styled.h1`\n  font-weight: bold;\n`;\n\nconst CentredColumn = Column.extend`\n  margin: 0 auto;\n`;\n\ninterface AvatarProps {\n  imageUrl: string;\n  name: string;\n}\n\nconst Avatar = (props: AvatarProps) => (\n  <CentredColumn>\n    <AvatarImage src={props.imageUrl} />\n    <AvatarTitle>{props.name}</AvatarTitle>\n  </CentredColumn>\n);\n\nexport default Avatar;\n","import * as React from \"react\";\nimport { CentredRow, Row } from \"../grid\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nexport interface NavigationLinkProps {\n  path: string;\n  name: string;\n}\n\ninterface NavigationProps {\n  links: NavigationLinkProps[];\n}\n\nconst NavigationList = styled.ul`\n  list-style: none;\n  display: flex;\n  margin: 0 auto;\n`;\n\nconst NavigationItem = styled.li`\n  margin: 0 10px;\n`;\n\nconst StyledLink = styled(Link).attrs({\n  activeClassName: \"active\"\n})`\n  color: lightgrey;\n  font-weight: bold;\n\n  &.active {\n    color: black;\n    border-bottom: 2px solid grey;\n  }\n  &:hover {\n    color: lightblue;\n    text-decoration: none;\n    border-bottom: 2px solid lightblue;\n  }\n`;\n\nconst NavigationLink = (props: NavigationLinkProps) => (\n  <NavigationItem>\n    <StyledLink to={props.path}>{props.name}</StyledLink>\n  </NavigationItem>\n);\n\nconst Navigation = (props: NavigationProps) => (\n  <CentredRow>\n    <NavigationList>\n      {props.links.map(link => <NavigationLink {...link} key={link.path} />)}\n    </NavigationList>\n  </CentredRow>\n);\n\nexport default Navigation;\n","import * as React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { Container, CentredRow } from \"./grid\";\nimport Avatar from \"./header/avatar\";\nimport Navigation, { NavigationLinkProps } from \"./header/navigation\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nconst Layout = (props: { children: any }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            avatar\n            navigation {\n              path\n              name\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet title={data.site.siteMetadata.title} />\n        <Container>\n          <CentredRow>\n            <Avatar\n              imageUrl={data.site.siteMetadata.avatar}\n              name={data.site.siteMetadata.title}\n            />\n          </CentredRow>\n\n          <Navigation links={data.site.siteMetadata.navigation} />\n\n          {props.children}\n        </Container>\n      </>\n    )}\n  />\n  /* <Helmet title={props.data.site.siteMetadata.title} />\n\n    <Container>\n      <CentredRow>\n        <Avatar\n          imageUrl={props.data.site.siteMetadata.avatar}\n          name={props.data.site.siteMetadata.title}\n        />\n      </CentredRow>\n\n      <Navigation links={props.data.site.siteMetadata.navigation} />\n\n      {props.children}\n    </Container>\n  </div> */\n  // }>\n);\n\nexport default Layout;\n"],"sourceRoot":""}