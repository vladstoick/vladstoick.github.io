{"version":3,"sources":["webpack:///./src/components/work-education-headline.tsx","webpack:///./src/components/work/index.tsx","webpack:///./src/utils/colours.ts","webpack:///./src/pages/work.tsx","webpack:///./src/components/layout/grid.tsx","webpack:///./src/components/layout/page_layout.tsx"],"names":["HeadlineRow","styled","Row","withConfig","displayName","componentId","Position","p","PositionTitle","span","Period","WorkEducationHeadline","props","react","title","location","period","WorkExperienceTag","TagList","Blurb","blockquote","WorkExperienceItem","key","id","work_education_headline","companyName","time","dangerouslySetInnerHTML","__html","html","tags","map","tag","List","div","WorkExperienceList","workExperience","we","work_WorkExperienceItem","Object","assign","WorkPage","data","mergedData","allWorkJson","edges","item","relevantMarkdown","allMarkdownRemark","find","mdItem","node","frontmatter","page_layout","work","pageQuery","__webpack_require__","d","__webpack_exports__","Container","styled_components__WEBPACK_IMPORTED_MODULE_0__","createGlobalStyle","_templateObject","PageLayout","react__WEBPACK_IMPORTED_MODULE_1__","_grid__WEBPACK_IMPORTED_MODULE_2__","children"],"mappings":"yJAIMA,EAAcC,YAAOC,KAAVC,WAAA,CAAAC,YAAA,uCAAAC,YAAA,eAAGJ,CAAH,kHASXK,EAAWL,IAAOM,EAAVJ,WAAA,CAAAC,YAAA,oCAAAC,YAAA,eAAGJ,CAAH,0CAKRO,EAAgBP,IAAOQ,KAAVN,WAAA,CAAAC,YAAA,yCAAAC,YAAA,eAAGJ,CAAH,uBAIbS,EAAST,IAAOQ,KAAVN,WAAA,CAAAC,YAAA,kCAAAC,YAAA,eAAGJ,CAAH,iBAkBGU,EAde,SAACC,GAAD,OAK5BC,EAAA,cAACb,EAAD,KACEa,EAAA,cAACP,EAAD,KACEO,EAAA,cAACL,EAAD,KAAgBI,EAAME,OADxB,MACkD,IAChDD,EAAA,0BAAOD,EAAMG,WAEfF,EAAA,cAACH,EAAD,KAASE,EAAMI,UC7BbC,EAAoBhB,IAAOQ,KAAVN,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGJ,CAAH,wGCPD,WDgBhBiB,EAAUjB,YAAOC,KAAVC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAGJ,CAAH,yCAKPkB,EAAQlB,IAAOmB,WAAVjB,WAAA,CAAAC,YAAA,cAAAC,YAAA,gBAAGJ,CAAH,iEAWLoB,EAAqB,SAACT,GAAD,OACzBC,EAAA,qBAAKS,IAAKV,EAAMW,IACdV,EAAA,cAACW,EAAD,CACEV,MAAOF,EAAME,MACbC,SAAUH,EAAMa,YAChBT,OAAQJ,EAAMc,OAEhBb,EAAA,cAACM,EAAD,KACEN,EAAA,qBAAKc,wBAAyB,CAAEC,OAAQhB,EAAMiB,SAEhDhB,EAAA,cAACK,EAAD,KACGN,EAAMkB,KAAKC,IAAI,SAAAC,GAAG,OACjBnB,EAAA,cAACI,EAAD,CAAmBK,IAAKU,GAAMA,QAUhCC,EAAOhC,IAAOiC,IAAV/B,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAGJ,CAAH,wEAiBKkC,EAXY,SAACvB,GAAD,OACzBC,EAAA,yBACEA,EAAA,8CACAA,EAAA,cAACoB,EAAD,KACGrB,EAAMwB,eAAeL,IAAI,SAAAM,GAAE,OAC1BxB,EAAA,cAACyB,EAADC,OAAAC,OAAA,GAAwBH,EAAxB,CAA4Bf,IAAKe,EAAGd,mDEF7BkB,UApBE,SAAC7B,GAChB,IAAM8B,EAAO9B,EAAM8B,KAEbC,EAAwCD,EAAKE,YAAYC,MAAMd,IACnE,SAAAe,GACE,IAAMC,EAAmBL,EAAKM,kBAAkBH,MAAMI,KAAK,SAAAC,GACzD,OAAOA,EAAOC,KAAKC,YAAYtC,QAAUgC,EAAKK,KAAK5B,KAGrD,OAAAgB,OAAAC,OAAA,GAAYM,EAAKK,KAASJ,EAAiBI,QAI/C,OACEtC,EAAA,cAACwC,EAAA,EAAD,KACExC,EAAA,cAACyC,EAAD,CAAoBlB,eAAgBO,MAf1C,IAsBaY,EAAS,+CCjEtBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAxD,IAAA,IAAA0D,EAAAJ,EAAA,KAEaG,EAAY1D,IAAOiC,IAAV/B,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,2EAQTC,EAAMD,IAAOiC,IAAV/B,WAAA,CAAAC,YAAA,YAAAC,YAAA,gBAAGJ,CAAH,mBAIUA,YAAOC,GAAVC,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAGJ,CAAH,sCAKDA,YAAOC,GAAVC,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGJ,CAAH,yMCXC4D,YAAHC,KA4CFC,IAtCI,SAACnD,GAAD,OACjBoD,EAAA,cAACC,EAAA,EAAD,KAAYrD,EAAMsD","file":"component---src-pages-work-tsx-9277be2daa340d8cb0b1.js","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Row } from \"./layout/grid\";\n\nconst HeadlineRow = styled(Row)`\n  justify-content: space-between;\n  flex-wrap: wrap;\n  align-items: center;\n  @media (max-width: 900px) {\n    margin-bottom: 5px;\n  }\n`;\n\nconst Position = styled.p`\n  margin-bottom: 0.1em;\n  font-size: 1.2em;\n`;\n\nconst PositionTitle = styled.span`\n  font-weight: bold;\n`;\n\nconst Period = styled.span`\n  color: gray;\n`;\n\nconst WorkEducationHeadline = (props: {\n  title: string;\n  location: string;\n  period: string;\n}) => (\n  <HeadlineRow>\n    <Position>\n      <PositionTitle>{props.title}</PositionTitle> at{\" \"}\n      <span>{props.location}</span>\n    </Position>\n    <Period>{props.period}</Period>\n  </HeadlineRow>\n);\n\nexport default WorkEducationHeadline;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { IWorkExperienceItemType } from \"../../pages/work\";\nimport * as colours from \"../../utils/colours\";\nimport { Row } from \"../layout/grid\";\nimport WorkEducationHeadline from \"./../work-education-headline\";\n\nconst WorkExperienceTag = styled.span`\n  background-color: ${colours.orange};\n  color: white;\n  margin: 2px 5px;\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 0.7em;\n`;\n\nconst TagList = styled(Row)`\n  flex-wrap: wrap;\n  margin-bottom: 0.5em;\n`;\n\nconst Blurb = styled.blockquote`\n  font-size: 1em;\n  p {\n    margin-bottom: 0.5em;\n  }\n\n  li {\n    margin-bottom: 0px;\n  }\n`;\n\nconst WorkExperienceItem = (props: IWorkExperienceItemType) => (\n  <div key={props.id}>\n    <WorkEducationHeadline\n      title={props.title}\n      location={props.companyName}\n      period={props.time}\n    />\n    <Blurb>\n      <div dangerouslySetInnerHTML={{ __html: props.html }} />\n    </Blurb>\n    <TagList>\n      {props.tags.map(tag => (\n        <WorkExperienceTag key={tag}>{tag}</WorkExperienceTag>\n      ))}\n    </TagList>\n  </div>\n);\n\ninterface IWorkExperienceProps {\n  workExperience: IWorkExperienceItemType[];\n}\n\nconst List = styled.div`\n  & > div:not(:first-child) {\n    border-top: 1px solid hsla(0, 0%, 0%, 0.2);\n  }\n`;\n\nconst WorkExperienceList = (props: IWorkExperienceProps) => (\n  <div>\n    <h2>ðŸ’¼ Work Experience</h2>\n    <List>\n      {props.workExperience.map(we => (\n        <WorkExperienceItem {...we} key={we.id} />\n      ))}\n    </List>\n  </div>\n);\n\nexport default WorkExperienceList;\n","export const orange = '#E37B40';\nexport const lightBlue = '#46B29D';\nexport const darkOrange = '#DE5B49';\nexport const darkBlue = '324D5C';\nexport const yellow = '#F0CA4D';\n","import { graphql } from \"gatsby\";\nimport * as React from \"react\";\nimport PageLayout from \"../components/layout/page_layout\";\nimport WorkExperienceList from \"../components/work\";\n\ninterface IWorkExperienceJson {\n  companyName: string;\n  time: string;\n  tags: [string];\n  title: string;\n  id: string;\n}\n\ninterface IWorkExperienceMarkdown {\n  html: string;\n  frontmatter: {\n    title: string;\n  };\n}\n\nexport interface IWorkExperienceItemType\n  extends IWorkExperienceJson,\n    IWorkExperienceMarkdown {}\n\ninterface IWorkPageProps {\n  data: {\n    allWorkJson: {\n      edges: [\n        {\n          node: IWorkExperienceJson;\n        }\n      ];\n    };\n    allMarkdownRemark: {\n      edges: [\n        {\n          node: IWorkExperienceMarkdown;\n        }\n      ];\n    };\n  };\n}\n\nconst WorkPage = (props: IWorkPageProps) => {\n  const data = props.data;\n\n  const mergedData: IWorkExperienceItemType[] = data.allWorkJson.edges.map(\n    item => {\n      const relevantMarkdown = data.allMarkdownRemark.edges.find(mdItem => {\n        return mdItem.node.frontmatter.title === item.node.id;\n      });\n\n      return { ...item.node, ...relevantMarkdown.node };\n    }\n  );\n\n  return (\n    <PageLayout>\n      <WorkExperienceList workExperience={mergedData} />\n    </PageLayout>\n  );\n};\n\nexport default WorkPage;\n\nexport const pageQuery = graphql`\n  query WorkPage {\n    allWorkJson(sort: { fields: [order] }) {\n      edges {\n        node {\n          companyName\n          time\n          tags\n          title\n          id\n        }\n      }\n    }\n\n    allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/.*work.*/\" } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (max-width: 900px) {\n    padding: 10px;\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n`;\n\nexport const CentredRow = styled(Row)`\n  justify-items: center;\n  width: 100%;\n`;\n\nexport const Column = styled(Row)`\n  flex-direction: column;\n`;\n","import { graphql, StaticQuery } from \"gatsby\";\nimport * as React from \"react\";\nimport Helmet from \"react-helmet\";\nimport Avatar from \"../header/avatar\";\nimport Navigation from \"../header/navigation\";\nimport { CentredRow, Container } from \"./grid\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  a {\n    color: red;\n  }\n`;\n\nconst PageLayout = (props: { children: React.ReactNode }) => (\n  <Container>{props.children}</Container>\n  // <StaticQuery\n  //   query={graphql`\n  //     query SiteTitleQuery {\n  //       site {\n  //         siteMetadata {\n  //           title\n  //           avatar\n  //           navigation {\n  //             path\n  //             name\n  //           }\n  //         }\n  //       }\n  //     }\n  //   `}\n  //   // tslint:disable-next-line:jsx-no-lambda\n  //   render={data => (\n  //     <>\n  //       <Helmet title={data.site.siteMetadata.title} />\n  //       <Container>\n  //         <CentredRow>\n  //           <Avatar\n  //             imageUrl={data.site.siteMetadata.avatar}\n  //             name={data.site.siteMetadata.title}\n  //           />\n  //         </CentredRow>\n\n  //         <Navigation links={data.site.siteMetadata.navigation} />\n\n  //         {props.children}\n  //       </Container>\n  //     </>\n  //   )}\n  // />\n);\n\nexport default PageLayout;\n"],"sourceRoot":""}